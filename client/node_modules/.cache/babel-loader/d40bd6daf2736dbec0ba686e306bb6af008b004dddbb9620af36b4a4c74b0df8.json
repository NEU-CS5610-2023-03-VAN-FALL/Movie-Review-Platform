{"ast":null,"code":"var _jsxFileName = \"/Users/limingxi/Documents/5610/assignment-03-mingxi-li/client/src/components/MovieDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport MovieSearch from \"./MovieSearch\";\nimport Layout from \"./Layout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDetails = () => {\n  _s();\n  const {\n    movieId\n  } = useParams();\n  const [movie, setMovie] = useState({});\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const movieResponse = await fetch(`${process.env.REACT_APP_API_URL}/movie-reviews/${movieId}`);\n        const movieData = await movieResponse.json();\n        setMovie(movieData);\n        setReviews(movieData.reviews);\n      } catch (error) {\n        console.error(\"Error fetching movie details:\", error);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MovieSearch, {\n      movie: movie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: reviews.map(review => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Content: \", review.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Created At: \", new Date(review.createdAt).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, review.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieDetails, \"hgXBVwHbm7QbrewqJLURph5QitU=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","MovieSearch","Layout","jsxDEV","_jsxDEV","MovieDetails","_s","movieId","movie","setMovie","reviews","setReviews","fetchMovieDetails","movieResponse","fetch","process","env","REACT_APP_API_URL","movieData","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","review","content","Date","createdAt","toLocaleString","id","_c","$RefreshReg$"],"sources":["/Users/limingxi/Documents/5610/assignment-03-mingxi-li/client/src/components/MovieDetails.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport MovieSearch from \"./MovieSearch\";\nimport Layout from \"./Layout\";\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const movieResponse = await fetch(`${process.env.REACT_APP_API_URL}/movie-reviews/${movieId}`);\n        const movieData = await movieResponse.json();\n        setMovie(movieData);\n        setReviews(movieData.reviews)\n\n      } catch (error) {\n        console.error(\"Error fetching movie details:\", error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      <MovieSearch movie={movie }/>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map((review) => (\n          <li key={review.id}>\n            <p>Content: {review.content}</p>\n            <p>Created At: {new Date(review.createdAt).toLocaleString()}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC9B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAQ,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC/B,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMa,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,aAAa,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,kBAAiBV,OAAQ,EAAC,CAAC;QAC9F,MAAMW,SAAS,GAAG,MAAML,aAAa,CAACM,IAAI,CAAC,CAAC;QAC5CV,QAAQ,CAACS,SAAS,CAAC;QACnBP,UAAU,CAACO,SAAS,CAACR,OAAO,CAAC;MAE/B,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDR,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAEb,oBACEH,OAAA;IAAAkB,QAAA,gBACElB,OAAA,CAACH,WAAW;MAACO,KAAK,EAAEA;IAAO;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC7BtB,OAAA;MAAAkB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBtB,OAAA;MAAAkB,QAAA,EACGZ,OAAO,CAACiB,GAAG,CAAEC,MAAM,iBAClBxB,OAAA;QAAAkB,QAAA,gBACElB,OAAA;UAAAkB,QAAA,GAAG,WAAS,EAACM,MAAM,CAACC,OAAO;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChCtB,OAAA;UAAAkB,QAAA,GAAG,cAAY,EAAC,IAAIQ,IAAI,CAACF,MAAM,CAACG,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFzDE,MAAM,CAACK,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACpB,EAAA,CAnCID,YAAY;EAAA,QACIL,SAAS;AAAA;AAAAkC,EAAA,GADzB7B,YAAY;AAqClB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}