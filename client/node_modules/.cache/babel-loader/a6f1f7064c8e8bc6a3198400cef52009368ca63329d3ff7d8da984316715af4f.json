{"ast":null,"code":"var _jsxFileName = \"/Users/limingxi/Documents/5610/assignment-03-mingxi-li/client/src/components/MovieSearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieSearch = ({\n  movie\n}) => {\n  _s();\n  const [error, setError] = useState(null);\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      try {\n        const request = require('request');\n        const options = {\n          method: 'GET',\n          url: 'https://movie-database-alternative.p.rapidapi.com/',\n          qs: {\n            s: movie.title,\n            r: 'json',\n            page: '1'\n          },\n          headers: {\n            'X-RapidAPI-Key': '0fce791ab6msh6f1b63a932f1ed3p1ef0b5jsn414243b1e98c',\n            'X-RapidAPI-Host': 'movie-database-alternative.p.rapidapi.com'\n          }\n        };\n        request(options, function (error, response, body) {\n          if (error) throw new Error(error);\n          console.log(body);\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch movie data\");\n        }\n        const data = await response.json();\n        setSearchResults(data);\n      } catch (error) {\n        console.error(\"Error fetching movie data:\", error);\n        setError(\"Failed to fetch movie data\");\n      }\n    };\n    fetchMovieData();\n  }, []); // Empty dependency array ensures the effect runs only once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Movie Search Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), searchResults && searchResults.Search && searchResults.Search.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Title: \", searchResults.Search[0].Title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Year: \", searchResults.Search[0].Year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Type: \", searchResults.Search[0].Type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: searchResults.Search[0].Poster,\n        alt: `Poster for ${searchResults.Search[0].Title}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieSearch, \"oJJrMh9yR9C6dcdHPX3NJZb7WZ8=\");\n_c = MovieSearch;\nexport default MovieSearch;\nvar _c;\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MovieSearch","movie","_s","error","setError","searchResults","setSearchResults","fetchMovieData","request","require","options","method","url","qs","s","title","r","page","headers","response","body","Error","console","log","ok","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","Search","length","Title","Year","Type","src","Poster","alt","_c","$RefreshReg$"],"sources":["/Users/limingxi/Documents/5610/assignment-03-mingxi-li/client/src/components/MovieSearch.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst MovieSearch = ({ movie }) => {\n  const [error, setError] = useState(null);\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      try {\n        const request = require('request');\n\n        const options = {\n          method: 'GET',\n          url: 'https://movie-database-alternative.p.rapidapi.com/',\n          qs: {\n            s: movie.title,\n            r: 'json',\n            page: '1'\n          },\n          headers: {\n            'X-RapidAPI-Key': '0fce791ab6msh6f1b63a932f1ed3p1ef0b5jsn414243b1e98c',\n            'X-RapidAPI-Host': 'movie-database-alternative.p.rapidapi.com'\n          }\n        };\n        \n        request(options, function (error, response, body) {\n          if (error) throw new Error(error);\n        \n          console.log(body);\n        });\n\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch movie data\");\n        }\n\n        const data = await response.json();\n        setSearchResults(data);\n      } catch (error) {\n        console.error(\"Error fetching movie data:\", error);\n        setError(\"Failed to fetch movie data\");\n      }\n    };\n\n    fetchMovieData();\n  }, []); // Empty dependency array ensures the effect runs only once on component mount\n\n  return (\n    <div>\n      <h2>Movie Search Results</h2>\n      {error && <p>{error}</p>}\n      {searchResults && searchResults.Search && searchResults.Search.length > 0 && (\n        <div>\n          <p>Title: {searchResults.Search[0].Title}</p>\n          <p>Year: {searchResults.Search[0].Year}</p>\n          <p>Type: {searchResults.Search[0].Type}</p>\n          <img src={searchResults.Search[0].Poster} alt={`Poster for ${searchResults.Search[0].Title}`} />\n        </div>\n      )}\n    </div>\n  );\n  \n   \n};\n\nexport default MovieSearch;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}