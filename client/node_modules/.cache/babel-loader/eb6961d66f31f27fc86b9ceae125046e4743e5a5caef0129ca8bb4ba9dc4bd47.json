{"ast":null,"code":"var _jsxFileName = \"/Users/limingxi/Documents/5610/assignment-03-mingxi-li/client/src/components/VerifyUser.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useAuthToken } from \"../AuthTokenContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VerifyUser() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    accessToken\n  } = useAuthToken();\n  useEffect(() => {\n    async function verifyUser() {\n      // make a call to our API to verify the user in our database, if it doesn't exist we'll insert it into our database\n      // finally we'll redirect the user to the /app route\n      const data = await fetch(`${process.env.REACT_APP_API_URL}/verify-user`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      const user = await data.json();\n      if (user.auth0Id) {\n        navigate(\"/app\");\n      }\n    }\n    if (accessToken) {\n      verifyUser();\n    }\n  }, [accessToken, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n}\n_s(VerifyUser, \"C/pvd+q+csH9masiIQKtw1PVh3g=\", false, function () {\n  return [useNavigate, useAuthToken];\n});\n_c = VerifyUser;\nvar _c;\n$RefreshReg$(_c, \"VerifyUser\");","map":{"version":3,"names":["useEffect","useAuthToken","useNavigate","jsxDEV","_jsxDEV","VerifyUser","_s","navigate","accessToken","verifyUser","data","fetch","process","env","REACT_APP_API_URL","method","headers","Authorization","user","json","auth0Id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/limingxi/Documents/5610/assignment-03-mingxi-li/client/src/components/VerifyUser.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useAuthToken } from \"../AuthTokenContext\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function VerifyUser() {\n  const navigate = useNavigate();\n  const { accessToken } = useAuthToken();\n\n  useEffect(() => {\n    async function verifyUser() {\n      // make a call to our API to verify the user in our database, if it doesn't exist we'll insert it into our database\n      // finally we'll redirect the user to the /app route\n      const data = await fetch(`${process.env.REACT_APP_API_URL}/verify-user`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n      const user = await data.json();\n\n      if (user.auth0Id) {\n        navigate(\"/app\");\n      }\n    }\n\n    if (accessToken) {\n      verifyUser();\n    }\n  }, [accessToken, navigate]);\n\n  return <div className=\"loading\">Loading...</div>;\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEM;EAAY,CAAC,GAAGP,YAAY,CAAC,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,eAAeS,UAAUA,CAAA,EAAG;MAC1B;MACA;MACA,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,cAAa,EAAE;QACvEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAG,UAAST,WAAY;QACvC;MACF,CAAC,CAAC;MACF,MAAMU,IAAI,GAAG,MAAMR,IAAI,CAACS,IAAI,CAAC,CAAC;MAE9B,IAAID,IAAI,CAACE,OAAO,EAAE;QAChBb,QAAQ,CAAC,MAAM,CAAC;MAClB;IACF;IAEA,IAAIC,WAAW,EAAE;MACfC,UAAU,CAAC,CAAC;IACd;EACF,CAAC,EAAE,CAACD,WAAW,EAAED,QAAQ,CAAC,CAAC;EAE3B,oBAAOH,OAAA;IAAKiB,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAClD;AAACpB,EAAA,CA5BuBD,UAAU;EAAA,QACfH,WAAW,EACJD,YAAY;AAAA;AAAA0B,EAAA,GAFdtB,UAAU;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}