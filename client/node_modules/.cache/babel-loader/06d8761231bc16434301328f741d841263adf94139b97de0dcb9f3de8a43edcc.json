{"ast":null,"code":"var _jsxFileName = \"/Users/limingxi/Documents/5610/assignment-03-mingxi-li/client/src/components/Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useAuthToken } from \"../AuthTokenContext\";\nimport \"../style/profile.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n  var _user$email_verified;\n  const {\n    user\n  } = useAuth0();\n  const [movieName, setMovieName] = useState(\"\");\n  const [movieReview, setMovieReview] = useState(\"\");\n  const [userMovies, setUserMovies] = useState([]);\n  const {\n    accessToken\n  } = useAuthToken();\n  const [editingReviewId, setEditingReviewId] = useState(null);\n  const [editedReviewContent, setEditedReviewContent] = useState(\"\");\n  const [createReviewError, setCreateReviewError] = useState(\"\");\n  const [editReviewError, setEditReviewError] = useState(\"\");\n  useEffect(() => {\n    const fetchUserMovies = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/my-movies`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        const movies = await response.json();\n        setUserMovies(movies);\n      } catch (error) {\n        console.error(\"Error fetching user's movies:\", error);\n      }\n    };\n    fetchUserMovies();\n  }, [user]);\n  const handleEditReview = (reviewId, currentContent) => {\n    setEditingReviewId(reviewId);\n    setEditedReviewContent(currentContent);\n  };\n  const handleCancelEdit = () => {\n    setEditingReviewId(null);\n    setEditedReviewContent(\"\");\n    setEditReviewError(\"\");\n  };\n  const handleSaveEdit = async () => {\n    if (!editedReviewContent.trim()) {\n      setEditReviewError(\"Review content cannot be empty\");\n      return;\n    }\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/review/${editingReviewId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${accessToken}`\n        },\n        body: JSON.stringify({\n          content: editedReviewContent\n        })\n      });\n      if (response.ok) {\n        fetchUserMovies();\n        setEditingReviewId(null);\n        setEditedReviewContent(\"\");\n        setEditReviewError(\"\");\n      } else {\n        console.error(\"Failed to save edited review\");\n      }\n    } catch (error) {\n      console.error(\"Error saving edited review:\", error);\n    }\n  };\n  const handleDeleteReview = async reviewId => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/review/${reviewId}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      if (response.ok) {\n        fetchUserMovies();\n      } else {\n        console.error(\"Failed to delete review\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting review:\", error);\n    }\n  };\n  const handleCreateReview = async () => {\n    if (!movieName.trim() || !movieReview.trim()) {\n      setCreateReviewError(\"Movie name and review content cannot be empty\");\n      return;\n    }\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/reviews`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${accessToken}`\n        },\n        body: JSON.stringify({\n          movieTitle: movieName,\n          content: movieReview\n        })\n      });\n      if (response.ok) {\n        fetchUserMovies();\n        setMovieName(\"\");\n        setMovieReview(\"\");\n        setCreateReviewError(\"\");\n      } else {\n        console.error(\"Failed to create review\");\n      }\n    } catch (error) {\n      console.error(\"Error creating review:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"review-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a New Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), createReviewError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: createReviewError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Movie Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: movieName,\n          onChange: e => setMovieName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Review:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: movieReview,\n          onChange: e => setMovieReview(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateReview,\n        children: \"Create Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", user.nickname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Auth0Id: \", user.sub]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email Verified: \", (_user$email_verified = user.email_verified) === null || _user$email_verified === void 0 ? void 0 : _user$email_verified.toString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-reviews\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Movie Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), userMovies.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: userMovies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"review-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this), movie.reviews.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: editingReviewId === review.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: editedReviewContent,\n                onChange: e => setEditedReviewContent(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 25\n              }, this), editReviewError && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-message\",\n                children: editReviewError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSaveEdit,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleCancelEdit,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: review.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEditReview(review.id, review.content),\n                children: \"Edit Review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteReview(review.id),\n                children: \"Delete Review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 23\n            }, this)\n          }, review.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 19\n          }, this))]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"Rn+G2PY2xaQw/iKOkmFHaacTtI8=\", false, function () {\n  return [useAuth0, useAuthToken];\n});\n_c = Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useAuth0","useAuthToken","jsxDEV","_jsxDEV","Profile","_s","_user$email_verified","user","movieName","setMovieName","movieReview","setMovieReview","userMovies","setUserMovies","accessToken","editingReviewId","setEditingReviewId","editedReviewContent","setEditedReviewContent","createReviewError","setCreateReviewError","editReviewError","setEditReviewError","fetchUserMovies","response","fetch","process","env","REACT_APP_API_URL","method","headers","Authorization","movies","json","error","console","handleEditReview","reviewId","currentContent","handleCancelEdit","handleSaveEdit","trim","body","JSON","stringify","content","ok","handleDeleteReview","handleCreateReview","movieTitle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","nickname","email","sub","email_verified","toString","length","map","movie","title","reviews","review","id","_c","$RefreshReg$"],"sources":["/Users/limingxi/Documents/5610/assignment-03-mingxi-li/client/src/components/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useAuthToken } from \"../AuthTokenContext\";\nimport \"../style/profile.css\";\n\nexport default function Profile() {\n  const { user } = useAuth0();\n  const [movieName, setMovieName] = useState(\"\");\n  const [movieReview, setMovieReview] = useState(\"\");\n  const [userMovies, setUserMovies] = useState([]);\n  const { accessToken } = useAuthToken();\n  const [editingReviewId, setEditingReviewId] = useState(null);\n  const [editedReviewContent, setEditedReviewContent] = useState(\"\");\n  const [createReviewError, setCreateReviewError] = useState(\"\");\n  const [editReviewError, setEditReviewError] = useState(\"\");\n\n\n\n  useEffect(() => {\n    const fetchUserMovies = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/my-movies`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`,\n          },\n        });\n        const movies = await response.json();\n        setUserMovies(movies);\n      } catch (error) {\n        console.error(\"Error fetching user's movies:\", error);\n      }\n    };\n    fetchUserMovies();\n  }, [user]);\n\n  const handleEditReview = (reviewId, currentContent) => {\n    setEditingReviewId(reviewId);\n    setEditedReviewContent(currentContent);\n  };\n\n  const handleCancelEdit = () => {\n    setEditingReviewId(null);\n    setEditedReviewContent(\"\");\n    setEditReviewError(\"\");\n  };\n\n  const handleSaveEdit = async () => {\n    if (!editedReviewContent.trim()) {\n      setEditReviewError(\"Review content cannot be empty\");\n      return;\n    }\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/review/${editingReviewId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${accessToken}`,\n        },\n        body: JSON.stringify({\n          content: editedReviewContent,\n        }),\n      });\n\n      if (response.ok) {\n        fetchUserMovies();\n        setEditingReviewId(null);\n        setEditedReviewContent(\"\");\n        setEditReviewError(\"\");\n      } else {\n        console.error(\"Failed to save edited review\");\n      }\n    } catch (error) {\n      console.error(\"Error saving edited review:\", error);\n    }\n  };\n\n  const handleDeleteReview = async (reviewId) => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/review/${reviewId}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n\n      if (response.ok) {\n        fetchUserMovies();\n      } else {\n        console.error(\"Failed to delete review\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting review:\", error);\n    }\n  };\n\n  const handleCreateReview = async () => {\n    if (!movieName.trim() || !movieReview.trim()) {\n      setCreateReviewError(\"Movie name and review content cannot be empty\");\n      return;\n    }\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/reviews`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${accessToken}`,\n        },\n        body: JSON.stringify({\n          movieTitle: movieName,\n          content: movieReview,\n        }),\n      });\n\n      if (response.ok) {\n    \n        fetchUserMovies();\n        setMovieName(\"\");\n        setMovieReview(\"\");\n        setCreateReviewError(\"\");\n      } else {\n        console.error(\"Failed to create review\");\n      }\n    } catch (error) {\n      console.error(\"Error creating review:\", error);\n    }\n  };\n\n  return (\n    <div className=\"review-container\">\n      <div className=\"review-form\">\n        <h2>Create a New Review</h2>\n        {createReviewError && <p className=\"error-message\">{createReviewError}</p>}\n        <label>\n          Movie Name:\n          <input\n            type=\"text\"\n            value={movieName}\n            onChange={(e) => setMovieName(e.target.value)}\n          />\n        </label>\n        <label>\n          Review:\n          <textarea\n            value={movieReview}\n            onChange={(e) => setMovieReview(e.target.value)}\n          />\n        </label>\n        <button onClick={handleCreateReview}>Create Review</button>\n      </div>\n\n      <div className=\"user-info\">\n        <p>Name: {user.nickname}</p>\n        <p>Email: {user.email}</p>\n        <p>Auth0Id: {user.sub}</p>\n        <p>Email Verified: {user.email_verified?.toString()}</p>\n      </div>\n\n      <div className=\"movie-reviews\">\n        <h2>Your Movie Reviews</h2>\n\n        {userMovies.length > 0 ? (\n          <ul>\n            {userMovies.map((movie) => (\n              <div className=\"review-item\" key={movie.id}>\n                <h3>{movie.title}</h3>\n                {movie.reviews.map((review) => (\n                  <div key={review.id}>\n                    {editingReviewId === review.id ? (\n                      <div>\n                        <textarea\n                          value={editedReviewContent}\n                          onChange={(e) => setEditedReviewContent(e.target.value)}\n                        />\n                        {editReviewError && <p className=\"error-message\">{editReviewError}</p>}\n                        <button onClick={handleSaveEdit}>Save</button>\n                        <button onClick={handleCancelEdit}>Cancel</button>\n                      </div>\n                    ) : (\n                      <div>\n                        <p>{review.content}</p>\n                        <button onClick={() => handleEditReview(review.id, review.content)}>\n                          Edit Review\n                        </button>\n                        <button onClick={() => handleDeleteReview(review.id)}>Delete Review</button>\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            ))}\n          </ul>\n        ) : (\n          <p>No movies available.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}