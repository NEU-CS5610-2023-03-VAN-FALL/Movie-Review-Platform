{"ast":null,"code":"var _jsxFileName = \"/Users/limingxi/Documents/5610/assignment-03-mingxi-li/client/src/components/MovieSearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieSearch = ({\n  movie,\n  searchResults,\n  setSearchResults\n}) => {\n  _s();\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      try {\n        const response = await fetch(\"https://movie-database-alternative.p.rapidapi.com/?s=Avengers Endgame&r=json&page=1\", {\n          method: \"GET\",\n          headers: {\n            \"X-RapidAPI-Key\": \"0fce791ab6msh6f1b63a932f1ed3p1ef0b5jsn414243b1e98c\",\n            \"X-RapidAPI-Host\": \"movie-database-alternative.p.rapidapi.com\"\n          },\n          qs: {\n            s: movie.title,\n            r: 'json',\n            page: '1'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch movie data\");\n        }\n        const data = await response.json();\n        setSearchResults(data.Search || []);\n      } catch (error) {\n        console.error(\"Error fetching movie data:\", error);\n        setError(\"Failed to fetch movie data\");\n      }\n    };\n    fetchMovieData();\n  }, []); // Empty dependency array ensures the effect runs only once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Movie Search Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [console.log(\"searchResults:\", searchResults), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieSearch, \"JfhGochNIqPkY17zyDsXnSE7zLQ=\");\n_c = MovieSearch;\nexport default MovieSearch;\nvar _c;\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MovieSearch","movie","searchResults","setSearchResults","_s","error","setError","fetchMovieData","response","fetch","method","headers","qs","s","title","r","page","ok","Error","data","json","Search","console","children","fileName","_jsxFileName","lineNumber","columnNumber","log","_c","$RefreshReg$"],"sources":["/Users/limingxi/Documents/5610/assignment-03-mingxi-li/client/src/components/MovieSearch.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst MovieSearch = ({ movie, searchResults, setSearchResults  }) => {\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      try {\n        const response = await fetch(\n          \"https://movie-database-alternative.p.rapidapi.com/?s=Avengers Endgame&r=json&page=1\",\n          {\n            method: \"GET\",\n            headers: {\n              \"X-RapidAPI-Key\": \"0fce791ab6msh6f1b63a932f1ed3p1ef0b5jsn414243b1e98c\",\n              \"X-RapidAPI-Host\": \"movie-database-alternative.p.rapidapi.com\",\n            },\n            qs: {\n              s: movie.title,\n              r: 'json',\n              page: '1'\n            },\n          }\n        );\n\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch movie data\");\n        }\n\n        const data = await response.json();\n        setSearchResults(data.Search || []);\n      } catch (error) {\n        console.error(\"Error fetching movie data:\", error);\n        setError(\"Failed to fetch movie data\");\n      }\n    };\n\n    fetchMovieData();\n  }, []); // Empty dependency array ensures the effect runs only once on component mount\n\n  return (\n    <div>\n      <h2>Movie Search Results</h2>\n      {error && <p>{error}</p>}\n      <ul>\n      {console.log(\"searchResults:\", searchResults)} {/* 在这里添加 console.log */}\n        {/* {Object.keys(searchResults).length > 0 && (\n          <li key={searchResults[0].imdbID}>\n            <p>Title: {searchResults[0].Title}</p>\n            <p>Year: {searchResults[0].Year}</p>\n            <p>Type: {searchResults[0].Type}</p>\n            <img src={searchResults[0].Poster} alt={`Poster for ${searchResults[0].Title}`} />\n          </li>\n        )} */}\n      </ul>\n    </div>\n  );  \n};\n\nexport default MovieSearch;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,KAAK;EAAEC,aAAa;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qFAAqF,EACrF;UACEC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,gBAAgB,EAAE,oDAAoD;YACtE,iBAAiB,EAAE;UACrB,CAAC;UACDC,EAAE,EAAE;YACFC,CAAC,EAAEZ,KAAK,CAACa,KAAK;YACdC,CAAC,EAAE,MAAM;YACTC,IAAI,EAAE;UACR;QACF,CACF,CAAC;QAED,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;QAC/C;QAEA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;QAClCjB,gBAAgB,CAACgB,IAAI,CAACE,MAAM,IAAI,EAAE,CAAC;MACrC,CAAC,CAAC,OAAOhB,KAAK,EAAE;QACdiB,OAAO,CAACjB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDC,QAAQ,CAAC,4BAA4B,CAAC;MACxC;IACF,CAAC;IAEDC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACER,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC5BtB,KAAK,iBAAIN,OAAA;MAAAwB,QAAA,EAAIlB;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB5B,OAAA;MAAAwB,QAAA,GACCD,OAAO,CAACM,GAAG,CAAC,gBAAgB,EAAE1B,aAAa,CAAC,EAAC,GAAC;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAS3C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACvB,EAAA,CAtDIJ,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AAwDjB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}