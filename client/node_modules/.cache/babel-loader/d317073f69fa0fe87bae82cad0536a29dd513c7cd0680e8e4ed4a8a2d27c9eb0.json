{"ast":null,"code":"var _jsxFileName = \"/Users/limingxi/Documents/5610/assignment-03-mingxi-li/client/src/components/MovieDetails.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst React = require(\"react\");\nconst {\n  useState,\n  useEffect\n} = require(\"react\");\nconst {\n  useParams\n} = require(\"react-router-dom\");\nconst MovieSearch = require(\"./MovieSearch\");\nconst MovieDetails = () => {\n  _s();\n  const {\n    movieId\n  } = useParams();\n  const [movie, setMovie] = useState({});\n  const [reviews, setReviews] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const movieResponse = await fetch(`${process.env.REACT_APP_API_URL}/movies/${movieId}`);\n        const movieData = await movieResponse.json();\n        setMovie(movieData);\n        const reviewsResponse = await fetch(`${process.env.REACT_APP_API_URL}/movie-reviews/${movieId}`);\n        const reviewsData = await reviewsResponse.json();\n        setReviews(reviewsData);\n      } catch (error) {\n        console.error(\"Error fetching movie details:\", error);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MovieSearch, {\n      setSearchResults: {\n        searchResults,\n        setSearchResults\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: reviews.map(review => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User: \", review.user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Content: \", review.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Created At: \", new Date(review.createdAt).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, review.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieDetails, \"PyYKpt+OwpyX6IZRKWHJKbHrSys=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","require","useState","useEffect","useParams","MovieSearch","MovieDetails","_s","movieId","movie","setMovie","reviews","setReviews","searchResults","setSearchResults","fetchMovieDetails","movieResponse","fetch","process","env","REACT_APP_API_URL","movieData","json","reviewsResponse","reviewsData","error","console","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","map","review","user","username","content","Date","createdAt","toLocaleString","id","_c","$RefreshReg$"],"sources":["/Users/limingxi/Documents/5610/assignment-03-mingxi-li/client/src/components/MovieDetails.jsx"],"sourcesContent":["const React = require(\"react\");\nconst { useState, useEffect } = require(\"react\");\nconst { useParams } = require(\"react-router-dom\");\nconst MovieSearch = require(\"./MovieSearch\");\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [reviews, setReviews] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const movieResponse = await fetch(`${process.env.REACT_APP_API_URL}/movies/${movieId}`);\n        const movieData = await movieResponse.json();\n        setMovie(movieData);\n\n        const reviewsResponse = await fetch(`${process.env.REACT_APP_API_URL}/movie-reviews/${movieId}`);\n        const reviewsData = await reviewsResponse.json();\n        setReviews(reviewsData);\n      } catch (error) {\n        console.error(\"Error fetching movie details:\", error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      <MovieSearch setSearchResults={{searchResults, setSearchResults} }/>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map((review) => (\n          <li key={review.id}>\n            <p>User: {review.user.username}</p>\n            <p>Content: {review.content}</p>\n            <p>Created At: {new Date(review.createdAt).toLocaleString()}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}